y = c(2,4,6,8)
for (i in 1:length(y)) {
y[i] <- y[i]+1
i <- i+1
}
y
plot(y)
barplot(y)
?barplot
git config -global.user.name "hopeemac"
git config -global user.name "hopeemac"
git config global user.name "hopeemac"
git config -global user.name "hopeemac"
?git config
?git
moneyIn <- read.csv("/Users/hopeemac/Documents/Code/Code for DC/ocf_contributions.csv")
moneyIn2014 <- moneyIn[which(moneyIn$Date.of.Receipt > "1/1/2014")]
moneyIn2014 <- moneyIn[which(moneyIn$Date.of.Receipt == "1/1/2014")]
colnames(moneyIn)
moneyIn2014 <- moneyIn[which(moneyIn$Date.of.Receipt == "1/1/2014")]
rm(moneyIn2014)
moneyIn2014 <- moneyIn[which(moneyIn$Election.Year == "2014")]
moneyIn2014 <- moneyIn[which(moneyIn$Election.Year == 2014)]
head(moneyIn)
table(moneyIn$Election.Year)
wd
dir
getwd
getwd()
3+5
3+5
4^3
c(2,3,4,5)    # C stands for "combine" or "concatenate."
c(2,3,4,5) + c(1,4,2,3)
c(2,3,4)*2
c(2,3,4)^3
c(3,4,5) + 2
c(2,3,4,5) + c(5,10)
c(2,3,4)*2
c(3,4,5) + 2
c(2,3,4,5) + c(5,10)
pwd
c(1,2,5)^c(2,2,3)
n <- 1:10
3:15
12:2
n <- 1.5:10
n
rep(7,20) # 20 copies of 7
getwd
getwd()
(1:11) %% 2
1:11 %% 2
1:11/2
(1:11) %% 2 == 1  # True when element odd; "==" is a test
v <- 10:20
m <- matrix(1:12, nrow=3, ncol=4)  # Defines a 3-by-4 matrix
m
a <- array(1:24, dim=c(2,4,3))   # Define a 2-by-4-by-3 array
a
my.list <- list(school="UVA", program="MSDS", year=2015)
my.list
my.list$program
my.list[1]
my.list[[3]]
install.packages('dygraphs')
install.packages('colorbrewer')
printers <- c("Clark Hall Main Floor", "Brown Science & Engineering Library Main Floor")
printers_c <- printers + "University of Virginia, Charlottesville, VA"
printers_c <- printers[1] + "University of Virginia, Charlottesville, VA"
printers_c <- str(printers) + "University of Virginia, Charlottesville, VA"
printers_c <- "Clark Hall Main Floor" + "University of Virginia, Charlottesville, VA"
printers_c <- ("Clark Hall Main Floor" + "University of Virginia, Charlottesville, VA")
printers_c <- paste(printers + "University of Virginia, Charlottesville, VA")
printers_c <- paste(printers, "University of Virginia, Charlottesville, VA")
View(printers_c)
printers_loc <- geocode(printers_c)
library(ggmap)
printers_loc <- geocode(printers_c)
printers_total <- data.frame(printers,printers_loc)
View(printer_total)
View(printers_total)
charlottesville <- get_map(location = "university of virginia", zoom = 16)
charlottesville <- get_map(location = "charlottesville", zoom = 16)
UVA <- get_map(location = "university of virginia", zoom = 16)
ggmap(UVA)
rm(charlottesville)
ggmap(UVA) + geom_point(data = printers_loc, aes(x=lon, y=lat, colour = 'Red'))
UVA <- get_map(location = "university of virginia", zoom = 14)
ggmap(UVA) + geom_point(data = printers_loc, aes(x=lon, y=lat, colour = 'Red'))
library(ggmap)
printers <- c("Clark Hall Main Floor", "Brown Science & Engineering Library Main Floor")
printers_c <- paste(printers, "University of Virginia, Charlottesville, VA")
View(printers_c)
printers_loc <- geocode(printers_c)
printers_total <- data.frame(printers,printers_loc)
View(printers_total)
rm(charlottesville)
UVA <- get_map(location = "university of virginia", zoom = 14)
ggmap(UVA) + geom_point(data = printers_loc, aes(x=lon, y=lat, colour = 'Red'), show_guide = F)
?get_map
UVA <- get_map(location = "university of virginia", zoom = 14, type = 'roadmap')
UVA <- get_map(location = "university of virginia", zoom = 14, type = roadmap)
UVA <- get_map(location = "university of virginia", zoom = 14, maptype = 'roadmap')
ggmap(UVA) + geom_point(data = printers_loc, aes(x=lon, y=lat, colour = 'Red'), show_guide = F)
library(ggmap)
printers <- c("Clark Hall Main Floor", "Brown Science & Engineering Library Main Floor")
printers_c <- paste(printers, "University of Virginia, Charlottesville, VA")
View(printers_c)
printers_loc <- geocode(printers_c)
printers_total <- data.frame(printers,printers_loc)
View(printers_total)
UVA <- get_map(location = "university of virginia", zoom = 14, maptype = 'roadmap')
?get_map
ggmap(UVA) + geom_point(data = printers_loc, aes(x=lon, y=lat, colour = 'Red'), show_guide = F)
ggmap(UVA) + geom_point(data = printers_loc, aes(x=lon, y=lat, colour = 'Red'), show_guide = F, type = 'a')
ggmap(UVA) + geom_point(data = printers_loc, aes(x=lon, y=lat, colour = 'Red'), show_guide = F, type = 'e')
ggmap(UVA) + geom_point(data = printers_loc, aes(x=lon, y=lat, colour = 'Red'),
show_guide = F, type = 'b')
ggmap(UVA) + geom_point(data = printers_loc, aes(x=lon, y=lat, colour = 'Red'),
show_guide = F, type = 'b', size = 8)
ggmap(UVA) + geom_point(data = printers_loc, aes(x=lon, y=lat, colour = 'Red'),
show_guide = F, shape = 0, size = 8)
ggmap(UVA) + geom_point(data = printers_loc, aes(x=lon, y=lat, colour = 'Red'),
show_guide = F, shape = 15, size = 8)
ggmap(UVA) + geom_point(data = printers_loc, aes(x=lon, y=lat, colour = 'Red'),
show_guide = F, shape = 15, size = 6)
ggmap(UVA) + geom_point(data = printers_loc, aes(x=lon, y=lat, colour = 'Red'),
show_guide = F, shape = 15, size = 4)
printers_all = (
"Alderman Library 4th Floor",
"Alderman Library 3rd Floor, Gov. Documents")
printers_all = (
"Alderman Library 4th Floor",
"Alderman Library 3rd Floor, Gov. Documents")
printers_all = c(
"Alderman Library 4th Floor",
"Alderman Library 3rd Floor, Gov. Documents")
printers_all
printers_all = c(
"Alderman Library 4th Floor",
"Alderman Library 3rd Floor, Gov. Documents",
"Bio/Psych Library, Gilmer Hall")
printers_all
UVA <- get_map(location = "university of virginia", zoom = 18, maptype = 'roadmap')
ggmap(UVA) + geom_point(data = printers_loc, aes(x=lon, y=lat, colour = 'Red'),
show_guide = F, shape = 15, size = 4)
help.start()
printwd()
wd()
setwd()
getwd()
?ggmap
?ggplot
library(ggmap)
AdMo <- get_map("DC")
ggmap(AdMo)
?get_map
home <- geocode("1944 Calvert St, Washington, DC")
home
AdMo <- get_map(home)
home$lon
AdMo <- get_map(home$lon, home$lat)
AdMo <- get_map(location = c(home$lon, home$lat))
ggmap(AdMo)
?ggmap
AdMo <- get_map(location = c(home$lon, home$lat), zoom = 16)
ggmap(AdMo)
AdMo <- get_map(location = c(home$lon, home$lat), zoom = 14)
ggmap(AdMo)
svm.fit.RBF <- ksvm(response ~ -x -y - theft.density, data = training.data.SVM, type="C-svc", kernel="rbfdot", C=10)
setwd('/Users/hopeemac/Documents/Code/GIT/dsicap_data/Unitarian')
fi <- list.files()
fi_pdf <- fi[grepl(".pdf", fi)]
fi_txt <- fi[grepl(".txt", fi)]
fi_txt %in% fi_pdf
fi <- list.files()
fi_pdf <- fi[grepl(".pdf", fi)]
fi_txt <- fi[grepl(".txt", fi)]
fi_txt %in% fi_pdf
setwd('/Users/hopeemac/Documents/Code/GIT/dsicap_data/Unitarian')
fi <- list.files()
fi_pdf <- fi[grepl(".pdf", fi)]
fi_txt <- fi[grepl(".txt", fi)]
for (f in fi_pdf) {
print(paste("Parsing", f))
if (f %in% fi_txt) {
system(paste0("pdftotext ", f), wait = TRUE)
}
# f2 <- sanitize(f)
#   # read content of converted txt file
#   filetxt <- sub(".pdf", ".txt", f)
#   text <- readLines(filetxt, warn=FALSE)
#   print(text)
#
}
fi_txt %in% fi_pdf
?grep1
?grepl
fi_pdf <- fi[grepl("*.pdf", fi)]
fi_txt <- fi[grepl("*.txt", fi)]
for (f in fi_pdf) {
print(paste("Parsing", f))
if (!(f %in% fi_txt)) {
system(paste0("pdftotext ", f), wait = TRUE)
}
# f2 <- sanitize(f)
#   # read content of converted txt file
#   filetxt <- sub(".pdf", ".txt", f)
#   text <- readLines(filetxt, warn=FALSE)
#   print(text)
#
}
for (f in fi_pdf) {
print(paste("Parsing", f))
if (!(f %in% fi_txt)) {
system(paste0("pdftotext ", '"',f,'"'), wait = TRUE)
}
# f2 <- sanitize(f)
#   # read content of converted txt file
#   filetxt <- sub(".pdf", ".txt", f)
#   text <- readLines(filetxt, warn=FALSE)
#   print(text)
#
}
fi <- list.files()
table(fi)
View(table(fi))
fi <- list.files()
f <- fi1[1]
f <- fi[1]
paste0(f,".txt")
f
for (f in fi_pdf) {
print(paste("Parsing", f))
if (!(paste0(f,".txt") %in% fi_txt)) {
print(f)
# system(paste0("pdftotext ", '"',f,'"'), wait = TRUE)
}
# f2 <- sanitize(f)
#   # read content of converted txt file
#   filetxt <- sub(".pdf", ".txt", f)
#   text <- readLines(filetxt, warn=FALSE)
#   print(text)
#
}
for (f in fi_pdf) {
#print(paste("Parsing", f))
if (!(paste0(f,".txt") %in% fi_txt)) {
print(f)
# system(paste0("pdftotext ", '"',f,'"'), wait = TRUE)
}
# f2 <- sanitize(f)
#   # read content of converted txt file
#   filetxt <- sub(".pdf", ".txt", f)
#   text <- readLines(filetxt, warn=FALSE)
#   print(text)
#
}
setwd('/Users/hopeemac/Documents/Code/GIT/dsicap_data/Unitarian2')
setwd('/Users/hopeemac/Documents/Code/GIT/dsicap_data/Unitarian 2')
fi <- list.files()
fi_pdf <- fi[grepl("*.pdf", fi)]
fi_txt <- fi[grepl("*.txt", fi)]
fi_txt %in% fi_pdf
for (f in fi_pdf) {
#print(paste("Parsing", f))
if (!(paste0(f,".txt") %in% fi_txt)) {
print(f)
# system(paste0("pdftotext ", '"',f,'"'), wait = TRUE)
}
# f2 <- sanitize(f)
#   # read content of converted txt file
#   filetxt <- sub(".pdf", ".txt", f)
#   text <- readLines(filetxt, warn=FALSE)
#   print(text)
#
}
f
?substr
length(f)
char(f)
nchar(f)
substr(f,nchar-3)
substr(f,nchar(f)-3)
substr(f,nchar(f)-3,nchar(f))
fi_pdf <- fi[(substr(f,nchar(f)-3,nchar(f)))==".pdf"]
fi_pdf <- fi[(substr(fi,nchar(fi)-3,nchar(fi)))==".pdf"]
View(fi_pdf)
fi_txt <- fi[(substr(fi,nchar(fi)-3,nchar(fi)))==".txt"]
View(fi_txt)
fi_pdf <- fi[(substr(fi,nchar(fi)-3,nchar(fi)))==".pdf" | (substr(fi,nchar(fi)-3,nchar(fi)))==".PDF" ]
220+195
View(fi)
fi <- list.files()
fi_pdf <- fi[(substr(fi,nchar(fi)-3,nchar(fi)))==".pdf" | (substr(fi,nchar(fi)-3,nchar(fi)))==".PDF" ]
fi_txt <- fi[(substr(fi,nchar(fi)-3,nchar(fi)))==".txt"]
fi <- list.files()
fi_pdf <- fi[(substr(fi,nchar(fi)-3,nchar(fi)))==".pdf" | (substr(fi,nchar(fi)-3,nchar(fi)))==".PDF" ]
fi_txt <- fi[(substr(fi,nchar(fi)-3,nchar(fi)))==".txt"]
for (f in fi_pdf) {
#print(paste("Parsing", f))
if (!(paste0(f,".txt") %in% fi_txt)) {
print(f)
# system(paste0("pdftotext ", '"',f,'"'), wait = TRUE)
}
# f2 <- sanitize(f)
#   # read content of converted txt file
#   filetxt <- sub(".pdf", ".txt", f)
#   text <- readLines(filetxt, warn=FALSE)
#   print(text)
#
}
for (f in fi_pdf) {
#print(paste("Parsing", f))
if (!(paste0(f,".txt") %in% fi_txt)) {
print(f)
system(paste0("pdftotext ", '"',f,'"'), wait = TRUE)
}
# f2 <- sanitize(f)
#   # read content of converted txt file
#   filetxt <- sub(".pdf", ".txt", f)
#   text <- readLines(filetxt, warn=FALSE)
#   print(text)
#
}
fi <- list.files()
fi <- list.files()
count(unique(fi))
sum(unique(fi))
length(unique(fi))
data(iris)
library(datasets)
library(help = "datasets")
data(iris)
iris <- data(iris)
iris <- dataset(iris)
iris <- iris
iris <- data(iris)
View(iris)
iris <- data("iris")
data("iris")
remove(iris)
data(iris)
View(iris)
install.packages("RWeka")
library(RWeka)
OneRModel = OneR(formula=V5~V1+V2+V3+V4+V5, IR#OneRModel
OneRModel = OneR(formula=V5~V1+V2+V3+V4+V5, IR)
OneRModel = OneR(formula=V5~V1+V2+V3+V4+V5)
OneRModel = OneR(formula=V5~V1+V2+V3+V4+V5, iris)
View(iris)
names(iris)
OneRModel = OneR(formula=Species~Sepal.Length,Sepal.Width,Petal.Length,Petal.Width, iris)
OneRModel = OneR(formula=Species~Sepal.Length+Sepal.Width+Petal.Length+Petal.Width, iris)
print(OneRModel)
